第10讲  后端2

10.1滑动窗口滤波与优化
	在SLAM中，考虑到实时性，需要控制BA的规模。现实条件下，需要限制后端的计算时间。在SfM中，可能要花费一周时间重建一个城市的地图，在SLAM中并不现实。
	为此可以考虑抽取连续视频中的关键帧，仅构造关键帧与路标点之间的BA。但是随着时间的流逝，关键帧会越来越多，地图规模会越来越大，导致BA的计算效率会不断降低，因此需要进一步控制BA的规模。一个最简单的控制BA规模的思路是，仅保留离当前时刻最近的N个关键帧，去掉时间上更早的关键帧；这样就将BA固定在一个时间窗口内，不在这个窗口的将被丢弃：这种方法称为滑动窗口法。另外，这N个路标的选取方式也并不固定，比如在ORB-SLAM2中的“共视图（Covisibility Graph）”的结构，就选取了“与现在相机存在共同观测的关键帧构成的图”；当共视图关系能够正确构造的时候，基于共视图的优化也能在更长时间内保持最优。

10.2    滑动窗口
	在滑动窗口中，当窗口结构发生改变时，各种状态变量应当相应发生变化。这件事情分为两步考虑：
	1.在窗口中新建一个关键帧，以及当前帧中观测到的路标点；
	2.把窗口中一个旧的关键帧删除，也可能删除它观测到的路标点；
	这在传统的BA问题的求解中是不需要考虑的。
	1.设在上个时刻，滑动窗口已经建立了N个关键帧，满足某个高斯分布，有对应的均值和方差。此时加入一个新的第N+1个关键帧，那么整个问题的变量变为N+1个关键帧和更多路标点的集合；这一步实际上也是平凡的，按照正常的BA流程处理即可。对所有点进行边缘化，即得到这N+1个关键帧的高斯分布参数。
	2.在删除旧的关键帧时，需要注意到它并不是孤立的。将该关键帧删除时，这会导致整个问题不再稀疏。因此在进行求解BA关键帧的边缘化的过程中，需要对细节进行改造。在不同的SLAM框架中对应有不同的改造方法，可以保证BA的稀疏性，进一步使用传统的BA求解方法进行求解。

10.3   位姿图：一种简化的BA
	位姿图是省略了特征点的BA。（附位姿图）
	位姿图中的节点表示相机位姿，边则是两个位姿节点之间的相对运动估计，该估计可以来自于特征点法或直接法，也可以来自于GPS或者IMU积分。使用图优化算法、高斯牛顿法、列文伯格-马夸尔特方法均可进行优化。


